@using Microsoft.AspNetCore.Identity
@using DataAccess.Models;
@using TaskManagment.CustomClaims;

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@if (SignInManager.IsSignedIn(User))
{
<li class="li-signedin-user-image">
    <div class="user-image signedin-user-image" style="background-image:url('@(User.FindFirst(c => c.Type == CustomClaimTypes.ImagePath).Value)')">
        <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"></a>
    </div>
</li>
<li>
    <!-- Dropdown Trigger -->
    <a class="dropdown-trigger" href="#" data-target="dropdown1">
        <i class="fas fa-chevron-down"></i>
    </a>

    <!-- Dropdown Structure -->
    <ul id="dropdown1" class="dropdown-content">
        <li>
            <a href="#!">
                Hi, 
                <span class="signedin-user-fullname">@(User.FindFirst(c => c.Type == CustomClaimTypes.FullName).Value)</span>
            </a>
        </li>
        <li class="divider" tabindex="-1"></li>
        <li>
            <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm">
                <button type="submit" id="signout-btn" class="btn">Sign out</button>
            </form>
        </li>
    </ul>
</li>
}
else
{

    <li><a asp-area="Identity" asp-page="/Account/Register">Sign up</a></li>
    <li><a asp-area="Identity" asp-page="/Account/Login">Sign in</a></li>
}